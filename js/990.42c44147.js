"use strict";(self["webpackChunkjoshuarhb_github_io"]=self["webpackChunkjoshuarhb_github_io"]||[]).push([[990],{9990:function(o,t,e){e.r(t),e.d(t,{default:function(){return u}});var s=e(3396),n=e(7139);const a={class:"BlogPage"},l=(0,s._)("h1",null,"Blog",-1);function r(o,t,e,r,c,i){const g=(0,s.up)("router-link");return(0,s.wg)(),(0,s.iD)("div",a,[l,((0,s.wg)(!0),(0,s.iD)(s.HY,null,(0,s.Ko)(c.blogPosts,(o=>((0,s.wg)(),(0,s.iD)("div",{key:o.id,class:"blog-post"},[(0,s._)("h2",null,(0,n.zw)(o.title),1),(0,s._)("p",null,(0,n.zw)(o.description),1),(0,s._)("p",null,(0,n.zw)(i.formatDate(o.date)),1),(0,s.Wm)(g,{to:`/blog/${o.slug}`},{default:(0,s.w5)((()=>[(0,s.Uk)("Read More")])),_:2},1032,["to"])])))),128))])}var c={data(){return{blogPosts:[]}},async mounted(){try{console.log("Fetching blog post filenames...");const o=await fetch("../content/blogposts.json");if(!o.ok)throw new Error(`Failed to fetch blogposts.json: ${o.statusText}`);const t=await o.json();console.log("Blog post filenames fetched:",t);const e=t.blogposts;Array.isArray(e)?this.blogPosts=await Promise.all(e.map((async o=>{console.log(`Fetching blog post: ${o}`);const t=await fetch(`../content/blogposts/${o}`);if(!t.ok)throw new Error(`Failed to fetch ${o}: ${t.statusText}`);const e=await t.json();return e.date=new Date(e.date),console.log("Fetched blog post data:",e),e}))):console.error("blogPostFilenames is not an array:",e),this.blogPosts.sort(((o,t)=>t.date-o.date))}catch(o){console.error("Error fetching blog posts:",o)}},methods:{formatDate(o){return o.toLocaleDateString("en-US",{year:"numeric",month:"long",day:"numeric"})}}},i=e(89);const g=(0,i.Z)(c,[["render",r]]);var u=g}}]);
//# sourceMappingURL=990.42c44147.js.map